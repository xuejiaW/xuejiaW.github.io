<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>三叔胡言乱语的地方</title>
  <icon>https://tuncle.blog/icon.png</icon>
  
  <link href="https://tuncle.blog/atom.xml" rel="self"/>
  
  <link href="https://tuncle.blog/"/>
  <updated>2023-11-13T16:00:00.000Z</updated>
  <id>https://tuncle.blog/</id>
  
  <author>
    <name>三叔</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>《Code Complete》 第五章：构建中的设计</title>
    <link href="https://tuncle.blog/ch_05_design_in_construction/"/>
    <id>https://tuncle.blog/ch_05_design_in_construction/</id>
    <published>2023-11-12T14:30:00.000Z</published>
    <updated>2023-11-13T16:00:00.000Z</updated>
    
    
    <summary type="html">本节主要关注于代码编写时所需要进行的设计活动，包括设计需要面临的挑战，一个良好的设计应该具备的特征，以及如何进行设计。</summary>
    
    
    
    
    <category term="工程实践" scheme="https://tuncle.blog/tags/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title>《Code Complete》 设计检查清单</title>
    <link href="https://tuncle.blog/ch_05_design_checklist/"/>
    <id>https://tuncle.blog/ch_05_design_checklist/</id>
    <published>2023-11-12T14:29:00.000Z</published>
    <updated>2023-11-13T16:00:00.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;设计清单，帮助你在设计完成后，确认自己的设计是否理想，合适。&lt;/p&gt;
&lt;h1 id=&quot;设计实践&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#设计实践&quot;&gt;#&lt;/a&gt;设计实践&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;[ ] 你是否进行过&lt;a</summary>
        
      
    
    
    
    
    <category term="工程实践" scheme="https://tuncle.blog/tags/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title>《Code Complete》第四章：关键构建决策</title>
    <link href="https://tuncle.blog/ch_04_key_construction_decisions/"/>
    <id>https://tuncle.blog/ch_04_key_construction_decisions/</id>
    <published>2023-11-12T12:34:00.000Z</published>
    <updated>2023-11-13T16:00:00.000Z</updated>
    
    
    <summary type="html">本章主要介绍了构建软件时的一些关键决策，包括编程语言的选择、编码约定、你在科技浪潮中的位置、构建实践的选择。</summary>
    
    
    
    
    <category term="工程实践" scheme="https://tuncle.blog/tags/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title>《Code Complete》 构建实践检查清单</title>
    <link href="https://tuncle.blog/ch_04_construction_practices_checklists/"/>
    <id>https://tuncle.blog/ch_04_construction_practices_checklists/</id>
    <published>2023-11-12T12:32:00.000Z</published>
    <updated>2023-11-13T16:00:00.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;这一节中包含有在编码时，需要检查的内容。&lt;/p&gt;
&lt;h1 id=&quot;Coding&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#Coding&quot;&gt;#&lt;/a&gt;Coding&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;[ ]</summary>
        
      
    
    
    
    
    <category term="工程实践" scheme="https://tuncle.blog/tags/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title>《Code Complete》第三章：测量两次，切割一次——前期准备</title>
    <link href="https://tuncle.blog/ch_03_measure_twice,_cut_once_upstream_prerequisites/"/>
    <id>https://tuncle.blog/ch_03_measure_twice,_cut_once_upstream_prerequisites/</id>
    <published>2023-11-12T09:48:00.000Z</published>
    <updated>2023-11-13T16:00:00.000Z</updated>
    
    
    <summary type="html">本章主要介绍了软件开发中的前期准备工作，包括问题定义，需求，架构设计。这些准备工作就如同建造大楼前的地基，如果地基没有打好或者规划不充分，施工期间你能做的最好的事情就是将损害降到最低。</summary>
    
    
    
    
    <category term="系统设计" scheme="https://tuncle.blog/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="工程实践" scheme="https://tuncle.blog/tags/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title>《Code Complete》先决条件检查清单</title>
    <link href="https://tuncle.blog/ch_03_prerequisites_checklist/"/>
    <id>https://tuncle.blog/ch_03_prerequisites_checklist/</id>
    <published>2023-11-12T09:38:00.000Z</published>
    <updated>2023-11-13T16:00:00.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;关于所有上游先决条件的检查表：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[ ] 你是否已经确定了你正在从事的软件项目的类型并适当地调整了你的方法（迭代 或 顺序）？&lt;/li&gt;
&lt;li&gt;[ ] 需求是否足够明确，足以开始构建？（更详细的请参考，&lt;a</summary>
        
      
    
    
    
    
    <category term="工程实践" scheme="https://tuncle.blog/tags/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title>《Code Complete》 架构检查清单</title>
    <link href="https://tuncle.blog/ch_03_architecture_checklist/"/>
    <id>https://tuncle.blog/ch_03_architecture_checklist/</id>
    <published>2023-11-12T09:36:00.000Z</published>
    <updated>2023-11-13T16:00:00.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;以下是一个好的架构应该解决的问题列表。该列表并不是要成为架构的综合指南，而是一种实用的方式来评估程序员获得的内容是否足够有营养。&lt;/p&gt;
&lt;p&gt;使用此清单作为起点。与&lt;a href=&quot;/ch_03_requirement_checklist&quot;&gt;需求清单&lt;/a&gt;</summary>
        
      
    
    
    
    
    <category term="系统设计" scheme="https://tuncle.blog/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="工程实践" scheme="https://tuncle.blog/tags/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title>《Code Complete》需求检查清单</title>
    <link href="https://tuncle.blog/ch_03_requirement_checklist/"/>
    <id>https://tuncle.blog/ch_03_requirement_checklist/</id>
    <published>2023-11-12T07:31:00.000Z</published>
    <updated>2023-11-13T16:00:00.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;需求清单包含一系列你可以用来询问自己的，有关项目需求的问题。&lt;/p&gt;
&lt;p&gt;使用该列表作为施工时的健全性检查，以确定构建前的需求准备工作的坚固程度。&lt;/p&gt;
&lt;p&gt;并非所有清单问题都适用于你的项目。&lt;/p&gt;
&lt;p&gt;如果你正在从事非正式项目，你会发现一些你甚至不需要考虑的问题</summary>
        
      
    
    
    
    
    <category term="系统设计" scheme="https://tuncle.blog/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="工程实践" scheme="https://tuncle.blog/tags/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title>《Code Complete》第二章：丰富软件开发理解的隐喻</title>
    <link href="https://tuncle.blog/ch_02_metaphors_for_a_richer_understanding_of_software_development/"/>
    <id>https://tuncle.blog/ch_02_metaphors_for_a_richer_understanding_of_software_development/</id>
    <published>2023-11-12T06:30:00.000Z</published>
    <updated>2023-11-13T16:00:00.000Z</updated>
    
    
    <summary type="html">本章主要介绍了软件开发中的隐喻，包括隐喻的重要性，常见的软件开发隐喻，以及如何使用隐喻。</summary>
    
    
    
    
    <category term="系统设计" scheme="https://tuncle.blog/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="工程实践" scheme="https://tuncle.blog/tags/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title>《Code Complete》第一章：欢迎来到软件构建</title>
    <link href="https://tuncle.blog/ch_01_welcome_to_software_construction/"/>
    <id>https://tuncle.blog/ch_01_welcome_to_software_construction/</id>
    <published>2023-11-12T06:29:00.000Z</published>
    <updated>2023-11-13T16:00:00.000Z</updated>
    
    
    <summary type="html">这一节主要介绍了软件构建的概念，以及为什么软件构建很重要，本书的其余部分将会围绕软件构建展开。</summary>
    
    
    
    
    <category term="系统设计" scheme="https://tuncle.blog/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="工程实践" scheme="https://tuncle.blog/tags/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title>《Code Complete》 笔记汇总</title>
    <link href="https://tuncle.blog/code_complete/"/>
    <id>https://tuncle.blog/code_complete/</id>
    <published>2023-11-12T06:27:00.000Z</published>
    <updated>2023-11-13T16:00:00.000Z</updated>
    
    
    <summary type="html">《Code Complete》（译名 《代码大全》）一书笔记，本书被誉为“软件开发领域的圣经”，其作者 Steve McConnel 多年在微软负责软件工程的最佳实践和过程改进。本书关注代码构建质量和工程可维护性，书中结合了非常多的日常开发中会遇到的案例，绝不仅是形而上学的进行理论分析。</summary>
    
    
    
    
    <category term="系统设计" scheme="https://tuncle.blog/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="编码规范" scheme="https://tuncle.blog/tags/%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/"/>
    
  </entry>
  
  <entry>
    <title>.Net Tools 创建指南</title>
    <link href="https://tuncle.blog/create_.net_tools/"/>
    <id>https://tuncle.blog/create_.net_tools/</id>
    <published>2023-11-05T14:25:00.000Z</published>
    <updated>2023-11-13T16:00:00.000Z</updated>
    
    
    <summary type="html">.Net Tools 创建教程，包含一个最简例子（一个在命令行输出字符的小牛）演示如何将编写的命令行程序生成为可全局运行的工具</summary>
    
    
    
    
    <category term="Dotnet" scheme="https://tuncle.blog/tags/Dotnet/"/>
    
  </entry>
  
  <entry>
    <title>Windows Package Manager（winget）使用指南</title>
    <link href="https://tuncle.blog/windows_package_manager/"/>
    <id>https://tuncle.blog/windows_package_manager/</id>
    <published>2023-11-04T11:26:00.000Z</published>
    <updated>2023-11-08T16:00:00.000Z</updated>
    
    
    <summary type="html">Windows Package Manager （winget） 是微软推出的基于命令行的包管理器，类似于 Chocolatey。在 winget 杠推出的时候，其功能非常的不健全，甚至于都没有 uninstall 支持，但在最新的 Win 11 中已经默认带上了 winget，且基本可以满足日常应用的安装。</summary>
    
    
    
    
    <category term="Windows" scheme="https://tuncle.blog/tags/Windows/"/>
    
    <category term="CLI" scheme="https://tuncle.blog/tags/CLI/"/>
    
  </entry>
  
  <entry>
    <title>《蛤蟆先生去看心理医生》 摘抄</title>
    <link href="https://tuncle.blog/ha_ma_xian_sheng_qu_kan_xin_li_yi_sheng/"/>
    <id>https://tuncle.blog/ha_ma_xian_sheng_qu_kan_xin_li_yi_sheng/</id>
    <published>2023-10-15T08:26:00.000Z</published>
    <updated>2023-11-13T16:00:00.000Z</updated>
    
    
    <summary type="html">这本书以蛤蟆先生与心理医生对话的方式，介绍了人自我状态的三种构成：儿童，父母，成人。秃鹫医生帮助蛤蟆先生从儿童状态走向了成人状态，并给出了人生坐标理论：根据我怎么看别人，和别人怎么看我，来区分四种人格，并鼓励走向“我好，别人也好”的坐标。</summary>
    
    
    
    
    <category term="心理学" scheme="https://tuncle.blog/tags/%E5%BF%83%E7%90%86%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>《Unix 编程艺术》 第二十章 未来</title>
    <link href="https://tuncle.blog/di_20_zhang_wei_lai%EF%BC%9Awei_ji_yu_ji_yu/"/>
    <id>https://tuncle.blog/di_20_zhang_wei_lai%EF%BC%9Awei_ji_yu_ji_yu/</id>
    <published>2023-10-06T08:23:00.000Z</published>
    <updated>2023-10-06T16:00:00.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;20_5_Unix_文化中的问题&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#20_5_Unix_文化中的问题&quot;&gt;#&lt;/a&gt;20.5 Unix 文化中的问题&lt;/h1&gt;
&lt;p&gt;在 2000 年，当花了三天时间参加了一个 Macintosh</summary>
        
      
    
    
    
    
    <category term="设计模式" scheme="https://tuncle.blog/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    <category term="编码规范" scheme="https://tuncle.blog/tags/%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/"/>
    
  </entry>
  
  <entry>
    <title>《Unix 编程艺术》 第十九章 开放源码</title>
    <link href="https://tuncle.blog/di_19_zhang_kai_fang_yuan_ma%EF%BC%9Azai_unix_xin_she_qu_zhong_bian_cheng/"/>
    <id>https://tuncle.blog/di_19_zhang_kai_fang_yuan_ma%EF%BC%9Azai_unix_xin_she_qu_zhong_bian_cheng/</id>
    <published>2023-10-06T08:22:00.000Z</published>
    <updated>2023-10-06T16:00:00.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;当 Unix 实践最接近开放源码时，就欣欣向荣，反之则停滞不前。&lt;/p&gt;
&lt;h1 id=&quot;19_1_Unix_和开放源码&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#19_1_Unix_和开放源码&quot;&gt;#&lt;/a&gt;19.1 Unix</summary>
        
      
    
    
    
    
    <category term="设计模式" scheme="https://tuncle.blog/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    <category term="编码规范" scheme="https://tuncle.blog/tags/%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/"/>
    
  </entry>
  
  <entry>
    <title>《Unix 编程艺术》 第十八章 文档</title>
    <link href="https://tuncle.blog/di_18_zhang_wen_dang%EF%BC%9Axiang_wang_luo_shi_jie_chan_shi_dai_ma/"/>
    <id>https://tuncle.blog/di_18_zhang_wen_dang%EF%BC%9Axiang_wang_luo_shi_jie_chan_shi_dai_ma/</id>
    <published>2023-10-06T08:20:00.000Z</published>
    <updated>2023-10-06T16:00:00.000Z</updated>
    
    
    <summary type="html">本节描述了 Unix 对于文档风格的偏爱，其并不倾向于所见即所得的文档，而更喜欢以标记为中心的工具。</summary>
    
    
    
    
    <category term="设计模式" scheme="https://tuncle.blog/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    <category term="编码规范" scheme="https://tuncle.blog/tags/%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/"/>
    
  </entry>
  
  <entry>
    <title>《Unix 编程艺术》 第十七章 可移植性</title>
    <link href="https://tuncle.blog/di_17_zhang_ke_yi_zhi_xing%EF%BC%9Aruan_jian_ke_yi_zhi_xing_yu_zun_xun_biao_zhun/"/>
    <id>https://tuncle.blog/di_17_zhang_ke_yi_zhi_xing%EF%BC%9Aruan_jian_ke_yi_zhi_xing_yu_zun_xun_biao_zhun/</id>
    <published>2023-10-06T08:18:00.000Z</published>
    <updated>2023-10-06T16:00:00.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;移植性一直是 Unix 的主要优势。Unix 程序员往往设想硬件是易变的，只有 Unix API 本是稳定的。&lt;/p&gt;
&lt;p&gt;Unix 程序员往往尽量避免软件依赖于某种特殊易逝的技术， 而严谨地遵循开放标准。这&lt;br&gt;
种考虑可移植性的编码习惯在 Unix</summary>
        
      
    
    
    
    
    <category term="设计模式" scheme="https://tuncle.blog/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    <category term="编码规范" scheme="https://tuncle.blog/tags/%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/"/>
    
  </entry>
  
  <entry>
    <title>猪小兵的故事</title>
    <link href="https://tuncle.blog/zhu_xiao_bing_de_gu_shi/"/>
    <id>https://tuncle.blog/zhu_xiao_bing_de_gu_shi/</id>
    <published>2023-10-06T07:29:00.000Z</published>
    <updated>2023-10-16T16:00:00.000Z</updated>
    
    
    <summary type="html">本故事取自 《Unix 编程艺术》 第 16 章，故事描述了一个叫猪小兵的程序员在开发者的痛苦，进而引出了软件公司对于重用代码的矛盾复杂的情节，并得出要关注软件重用的结论。</summary>
    
    
    
    
    <category term="系统设计" scheme="https://tuncle.blog/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>《Unix 编程艺术》 第十六章 重用</title>
    <link href="https://tuncle.blog/di_16_zhang_zhong_yong%EF%BC%9Alun_bu_yao_zhong_xin_fa_ming_lun_zi/"/>
    <id>https://tuncle.blog/di_16_zhang_zhong_yong%EF%BC%9Alun_bu_yao_zhong_xin_fa_ming_lun_zi/</id>
    <published>2023-10-06T07:22:00.000Z</published>
    <updated>2023-10-06T16:00:00.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;不愿做不必要的工作是程序员的一大美德。&lt;/p&gt;
&lt;p&gt;和其它耗在软件开发的花费比起来，时间无疑是最宝贵和最有价值的:</summary>
        
      
    
    
    
    
    <category term="设计模式" scheme="https://tuncle.blog/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    <category term="编码规范" scheme="https://tuncle.blog/tags/%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/"/>
    
  </entry>
  
</feed>
