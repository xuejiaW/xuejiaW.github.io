<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>三叔胡言乱语的地方</title>
  <icon>https://tuncle.blog/icon.png</icon>
  
  <link href="https://tuncle.blog/atom.xml" rel="self"/>
  
  <link href="https://tuncle.blog/"/>
  <updated>2024-04-12T16:00:00.000Z</updated>
  <id>https://tuncle.blog/</id>
  
  <author>
    <name>三叔</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用 System.CommandLine 为 .Net Tools 添加命令行参数支持</title>
    <link href="https://tuncle.blog/system.commandline_get_started/"/>
    <id>https://tuncle.blog/system.commandline_get_started/</id>
    <published>2024-04-13T02:43:00.000Z</published>
    <updated>2024-04-12T16:00:00.000Z</updated>
    
    
    <summary type="html">本篇教程通过创建一个名为 scl (Sample Command Line) 的 .Net Tools 来说明如何使用 System.CommandLine 库为 .Net Tool 增加命令行参数解析支持。</summary>
    
    
    
    
    <category term="DotNet" scheme="https://tuncle.blog/tags/DotNet/"/>
    
  </entry>
  
  <entry>
    <title>.Net 工程创建 NUnit 单元测试指南</title>
    <link href="https://tuncle.blog/create_nunit_testing/"/>
    <id>https://tuncle.blog/create_nunit_testing/</id>
    <published>2024-04-07T12:56:00.000Z</published>
    <updated>2024-04-06T16:00:00.000Z</updated>
    
    
    <summary type="html">为 .Net 工程创建 NUnit 单元测试的最简教程，包含创建被测试工程、创建 NUnit 测试工程、编写单元测试等内容。</summary>
    
    
    
    
    <category term="DotNet" scheme="https://tuncle.blog/tags/DotNet/"/>
    
    <category term="UnitTesting/NUnit" scheme="https://tuncle.blog/tags/UnitTesting-NUnit/"/>
    
  </entry>
  
  <entry>
    <title>Normal Matrix 矩阵推导</title>
    <link href="https://tuncle.blog/normal_matrix/"/>
    <id>https://tuncle.blog/normal_matrix/</id>
    <published>2024-04-02T03:58:00.000Z</published>
    <updated>2024-04-06T16:00:00.000Z</updated>
    
    
    <summary type="html">关于将法线从 Model Space 转换到 World Space 的矩阵的推导，解释了为何法线的变化，需要用到 Model Matrix 的逆矩阵的转置。</summary>
    
    
    
    
    <category term="图形学" scheme="https://tuncle.blog/tags/%E5%9B%BE%E5%BD%A2%E5%AD%A6/"/>
    
    <category term="数学" scheme="https://tuncle.blog/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>Custom SRP - Draw Calls</title>
    <link href="https://tuncle.blog/draw_calls/"/>
    <id>https://tuncle.blog/draw_calls/</id>
    <published>2024-03-23T05:53:00.000Z</published>
    <updated>2024-04-01T16:00:00.000Z</updated>
    
    
    <summary type="html">渲染自定义的 `Unlit` 的材质渲染一系列小球，讨论了不同的节省 Draw Calls 的技术，以及讨论了不同的实现透明度的办法</summary>
    
    
    
    
    <category term="Unity" scheme="https://tuncle.blog/tags/Unity/"/>
    
    <category term="SRP" scheme="https://tuncle.blog/tags/SRP/"/>
    
  </entry>
  
  <entry>
    <title>Custom SRP - Custom Render Pipeline</title>
    <link href="https://tuncle.blog/custom_render_pipeline/"/>
    <id>https://tuncle.blog/custom_render_pipeline/</id>
    <published>2024-03-23T04:48:00.000Z</published>
    <updated>2024-03-30T16:00:00.000Z</updated>
    
    
    <summary type="html">该部分讲述了使用自定义的渲染管线在 Editor 和 Game 界面中绘制一系列 `Unlit/Color` 的物体以及 Skybox。</summary>
    
    
    
    
    <category term="Unity" scheme="https://tuncle.blog/tags/Unity/"/>
    
    <category term="SRP" scheme="https://tuncle.blog/tags/SRP/"/>
    
  </entry>
  
  <entry>
    <title>Custom SRP</title>
    <link href="https://tuncle.blog/custom_srp/"/>
    <id>https://tuncle.blog/custom_srp/</id>
    <published>2024-03-23T04:47:00.000Z</published>
    <updated>2024-03-22T16:00:00.000Z</updated>
    
    
    <summary type="html">Unity Catlike 中 Custom SRP 教程学习笔记汇总，该笔记并非完全的对原教程的翻译，在学习过程中的发现的额外资料以及对原教程中未详细说明的部分都会进行相应的补充。</summary>
    
    
    
    
    <category term="Unity" scheme="https://tuncle.blog/tags/Unity/"/>
    
    <category term="Catlike" scheme="https://tuncle.blog/tags/Catlike/"/>
    
  </entry>
  
  <entry>
    <title>《Terminal, Console, Shell, Command Line 之间的关系》</title>
    <link href="https://tuncle.blog/difference_between_terminal,_console,_shell,_and_command_line/"/>
    <id>https://tuncle.blog/difference_between_terminal,_console,_shell,_and_command_line/</id>
    <published>2024-02-10T04:48:00.000Z</published>
    <updated>2024-03-22T16:00:00.000Z</updated>
    
    
    <summary type="html">Terminal，Console，Shell 和 Command Line 这几个词汇经常同时被使用，也因此他们的含义很容易被混淆。本文将尝试解释这几个词汇的含义。</summary>
    
    
    
    
    <category term="工具" scheme="https://tuncle.blog/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>《Code Complete》 第六章：类的实践</title>
    <link href="https://tuncle.blog/ch_06_working_classes/"/>
    <id>https://tuncle.blog/ch_06_working_classes/</id>
    <published>2023-12-27T13:50:00.000Z</published>
    <updated>2023-12-26T16:00:00.000Z</updated>
    
    
    <summary type="html">本节主要关注于类的实践，包括一个好的类的特征（良好的抽象，良好的封装），在实现类的过程中，需要关注的问题，如应当使用组合和继承的时机，应当如何处理成员函数和成员变量等。</summary>
    
    
    
    
    <category term="工程实践" scheme="https://tuncle.blog/tags/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
    <category term="代码质量" scheme="https://tuncle.blog/tags/%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/"/>
    
  </entry>
  
  <entry>
    <title>Powershell 模块：ZLocation</title>
    <link href="https://tuncle.blog/zlocation/"/>
    <id>https://tuncle.blog/zlocation/</id>
    <published>2023-11-27T13:50:00.000Z</published>
    <updated>2024-02-08T16:00:00.000Z</updated>
    
    
    <summary type="html">ZLocation 是 PowerShell 中的一个 Module，其可以追踪访问各个地址的历时，并通过 `z` 命令快速访问你最常使用的目录，有效的降低了每次通过反复 `cd` 来进入路径的操作数量。</summary>
    
    
    
    
    <category term="工具" scheme="https://tuncle.blog/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="CLI" scheme="https://tuncle.blog/tags/CLI/"/>
    
    <category term="效率提升" scheme="https://tuncle.blog/tags/%E6%95%88%E7%8E%87%E6%8F%90%E5%8D%87/"/>
    
    <category term="PowerShell" scheme="https://tuncle.blog/tags/PowerShell/"/>
    
  </entry>
  
  <entry>
    <title>Unity Input System Step-By-Step 最简教程</title>
    <link href="https://tuncle.blog/input_system_minimum_tutorial/"/>
    <id>https://tuncle.blog/input_system_minimum_tutorial/</id>
    <published>2023-11-19T07:33:00.000Z</published>
    <updated>2023-12-05T16:00:00.000Z</updated>
    
    
    <summary type="html">本文为 Unity Input System 的逐步最简教程，在教程的最后可以使用游戏手柄和键盘控制场景中的小球移动，内有相应源码工程。本教程极大程度的参考了 Unity Learn 上的官方教程，但并不是其翻译版本，而是根据我的学习过程进行相应增删改。</summary>
    
    
    
    
    <category term="Unity" scheme="https://tuncle.blog/tags/Unity/"/>
    
    <category term="Tutorial" scheme="https://tuncle.blog/tags/Tutorial/"/>
    
  </entry>
  
  <entry>
    <title>《Code Complete》 第五章：构建中的设计</title>
    <link href="https://tuncle.blog/ch_05_design_in_construction/"/>
    <id>https://tuncle.blog/ch_05_design_in_construction/</id>
    <published>2023-11-12T14:30:00.000Z</published>
    <updated>2024-03-08T16:00:00.000Z</updated>
    
    
    <summary type="html">本节主要关注于代码编写时所需要进行的设计活动，包括设计需要面临的挑战，一个良好的设计应该具备的特征，以及如何进行设计。</summary>
    
    
    
    
    <category term="工程实践" scheme="https://tuncle.blog/tags/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title>《Code Complete》 设计检查清单</title>
    <link href="https://tuncle.blog/ch_05_design_checklist/"/>
    <id>https://tuncle.blog/ch_05_design_checklist/</id>
    <published>2023-11-12T14:29:00.000Z</published>
    <updated>2023-12-23T16:00:00.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;设计清单，帮助你在设计完成后，确认自己的设计是否理想，合适。&lt;/p&gt;
&lt;h1 id=&quot;设计实践&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#设计实践&quot;&gt;#&lt;/a&gt;设计实践&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;[ ] 你是否进行过&lt;a</summary>
        
      
    
    
    
    
    <category term="工程实践" scheme="https://tuncle.blog/tags/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title>《Code Complete》第四章：关键构建决策</title>
    <link href="https://tuncle.blog/ch_04_key_construction_decisions/"/>
    <id>https://tuncle.blog/ch_04_key_construction_decisions/</id>
    <published>2023-11-12T12:34:00.000Z</published>
    <updated>2023-11-16T16:00:00.000Z</updated>
    
    
    <summary type="html">本章主要介绍了构建软件时的一些关键决策，包括编程语言的选择、编码约定、你在科技浪潮中的位置、构建实践的选择。</summary>
    
    
    
    
    <category term="工程实践" scheme="https://tuncle.blog/tags/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title>《Code Complete》 构建实践检查清单</title>
    <link href="https://tuncle.blog/ch_04_construction_practices_checklists/"/>
    <id>https://tuncle.blog/ch_04_construction_practices_checklists/</id>
    <published>2023-11-12T12:32:00.000Z</published>
    <updated>2023-11-17T16:00:00.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;这一节中包含有在编码时，需要检查的内容。&lt;/p&gt;
&lt;h1 id=&quot;Coding&quot;&gt;&lt;a class=&quot;header-anchor&quot; href=&quot;#Coding&quot;&gt;#&lt;/a&gt;Coding&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;[ ]</summary>
        
      
    
    
    
    
    <category term="工程实践" scheme="https://tuncle.blog/tags/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title>《Code Complete》第三章：测量两次，切割一次——前期准备</title>
    <link href="https://tuncle.blog/ch_03_measure_twice,_cut_once_upstream_prerequisites/"/>
    <id>https://tuncle.blog/ch_03_measure_twice,_cut_once_upstream_prerequisites/</id>
    <published>2023-11-12T09:48:00.000Z</published>
    <updated>2024-01-03T16:00:00.000Z</updated>
    
    
    <summary type="html">本章主要介绍了软件开发中的前期准备工作，包括问题定义，需求，架构设计。这些准备工作就如同建造大楼前的地基，如果地基没有打好或者规划不充分，施工期间你能做的最好的事情就是将损害降到最低。</summary>
    
    
    
    
    <category term="系统设计" scheme="https://tuncle.blog/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="工程实践" scheme="https://tuncle.blog/tags/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title>《Code Complete》先决条件检查清单</title>
    <link href="https://tuncle.blog/ch_03_prerequisites_checklist/"/>
    <id>https://tuncle.blog/ch_03_prerequisites_checklist/</id>
    <published>2023-11-12T09:38:00.000Z</published>
    <updated>2023-11-16T16:00:00.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;关于所有上游先决条件的检查表：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[ ] 你是否已经确定了你正在从事的软件项目的类型并适当地调整了你的方法（迭代 或 顺序）？&lt;/li&gt;
&lt;li&gt;[ ] 需求是否足够明确，足以开始构建？（更详细的请参考，&lt;a</summary>
        
      
    
    
    
    
    <category term="工程实践" scheme="https://tuncle.blog/tags/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title>《Code Complete》 架构检查清单</title>
    <link href="https://tuncle.blog/ch_03_architecture_checklist/"/>
    <id>https://tuncle.blog/ch_03_architecture_checklist/</id>
    <published>2023-11-12T09:36:00.000Z</published>
    <updated>2023-11-17T16:00:00.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;以下是一个好的架构应该解决的问题列表。该列表并不是要成为架构的综合指南，而是一种实用的方式来评估程序员获得的内容是否足够有营养。&lt;/p&gt;
&lt;p&gt;使用此清单作为起点。与&lt;a href=&quot;/ch_03_requirement_checklist&quot;&gt;需求清单&lt;/a&gt;</summary>
        
      
    
    
    
    
    <category term="系统设计" scheme="https://tuncle.blog/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="工程实践" scheme="https://tuncle.blog/tags/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title>《Code Complete》需求检查清单</title>
    <link href="https://tuncle.blog/ch_03_requirement_checklist/"/>
    <id>https://tuncle.blog/ch_03_requirement_checklist/</id>
    <published>2023-11-12T07:31:00.000Z</published>
    <updated>2023-12-12T16:00:00.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;需求清单包含一系列你可以用来询问自己的，有关项目需求的问题。&lt;/p&gt;
&lt;p&gt;使用该列表作为施工时的健全性检查，以确定构建前的需求准备工作的坚固程度。&lt;/p&gt;
&lt;p&gt;并非所有清单问题都适用于你的项目。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果你正在从事非正式项目，你会发现一些你甚至不需</summary>
        
      
    
    
    
    
    <category term="系统设计" scheme="https://tuncle.blog/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="工程实践" scheme="https://tuncle.blog/tags/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title>《Code Complete》第二章：丰富软件开发理解的隐喻</title>
    <link href="https://tuncle.blog/ch_02_metaphors_for_a_richer_understanding_of_software_development/"/>
    <id>https://tuncle.blog/ch_02_metaphors_for_a_richer_understanding_of_software_development/</id>
    <published>2023-11-12T06:30:00.000Z</published>
    <updated>2023-12-26T16:00:00.000Z</updated>
    
    
    <summary type="html">本章主要介绍了软件开发中的隐喻，包括隐喻的重要性，常见的软件开发隐喻，以及如何使用隐喻。</summary>
    
    
    
    
    <category term="系统设计" scheme="https://tuncle.blog/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="工程实践" scheme="https://tuncle.blog/tags/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
  <entry>
    <title>《Code Complete》第一章：欢迎来到软件构建</title>
    <link href="https://tuncle.blog/ch_01_welcome_to_software_construction/"/>
    <id>https://tuncle.blog/ch_01_welcome_to_software_construction/</id>
    <published>2023-11-12T06:29:00.000Z</published>
    <updated>2023-11-17T16:00:00.000Z</updated>
    
    
    <summary type="html">这一节主要介绍了软件构建的概念，以及为什么软件构建很重要，本书的其余部分将会围绕软件构建展开。</summary>
    
    
    
    
    <category term="系统设计" scheme="https://tuncle.blog/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="工程实践" scheme="https://tuncle.blog/tags/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
  </entry>
  
</feed>
